<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gy.pj.sys.dao.SysStudentDao">
  <resultMap id="BaseResultMap" type="com.gy.pj.sys.entity.SysStudent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="height" jdbcType="DOUBLE" property="height" />
    <result column="weight" jdbcType="DOUBLE" property="weight" />
    <result column="phoneNumber" jdbcType="CHAR" property="phoneNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="createdTime" jdbcType="VARCHAR" property="createdTime" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gym_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.gy.pj.sys.entity.SysStudent">
    insert into gym_student (id, `name`, gender, 
      age, height, weight, 
      phoneNumber, email, address, 
      createdTime)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{age,jdbcType=INTEGER}, #{height,jdbcType=DOUBLE}, #{weight,jdbcType=DOUBLE}, 
      #{phoneNumber,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=VARCHAR})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.gy.pj.sys.entity.SysStudent">
    update gym_student
    set `name` = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      age = #{age,jdbcType=INTEGER},
      height = #{height,jdbcType=DOUBLE},
      weight = #{weight,jdbcType=DOUBLE},
      phoneNumber = #{phoneNumber,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      createdTime = #{createdTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, `name`, gender, age, height, weight, phoneNumber, email, address, createdTime
    from gym_student
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select id, `name`, gender, age, height, weight, phoneNumber, email, address, createdTime
    from gym_student
  </select>
  
  <!-- 实现翻页查询操作 -->
	<select id="findPageObjects" resultType="com.gy.pj.sys.entity.SysStudent">
		select * from gym_student
		<include refid="queryWhereId" />
		<!-- 重复记录提取 -->
		order by id
	</select>
	<!-- 实现查询统计操作 -->
	<select id="getRowCount" resultType="int">
		select count(*) from gym_student
		<include refid="queryWhereId" />
	</select>
	<!-- 借助此元素对共性数据进行提取，其他地方用到此元素，内容用include包含 -->
	<sql id="queryWhereId">
		<where>
			<if test="name!=null and name!=''">
				<!-- 也许有条件也许没有条件，concat是mysql连接字符串的函数，模糊查询 -->
				name like concat("%",#{name},"%")
			</if>
		</where>
	</sql>
	
	<!-- 删除 -->
	<delete id="deleteObjects">
		delete from gym_student where id in
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</delete>
	<select id="findById" resultType="com.gy.pj.sys.entity.SysStudent">
		select * from gym_student
		where id=#{id}
	</select>
	
	
  
</mapper>